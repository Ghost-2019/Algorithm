/**
 * 思路：喝汤问题。
 * 起始有等量的 N ml 的 A,B 两种汤，定义了四种舀汤的操作，每次随机执行一种舀汤操作的一次操作。
 * 如果某一次舀汤时不能按预期数量提供，那么尽可能多的接近要求提供汤。
 * 当两种汤都舀空时，操作终止。
 * 输出是求概率 P = P(A 汤先被要舀空) + P(A,B 汤同时被舀空) / 2
 *
 */
class Solution {
public:
    double soupServings(int N) {
    	int A, B;
    	// 去除 k *（250 * A + 150 * B）,因为按均匀概率来看待的话，
    	// 一次将四个执行都一遍会消耗 （250ml A + 150ml B），这部分超出的量不对最后的结果造成影响
        if(N > 250) {	
        	A = N % 250;
        	B = N - 150 * (N / 250);
        }
        
        
        
    }
};
